buildscript {
    repositories {
        maven { url 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url 'https://modmaven.dev/' }
        maven {
            name "Sponge"
            url "https://repo.spongepowered.org/repository/maven-public/"
        }

        mavenLocal()
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }

}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version = "${mc_version}-${mod_version}"
group = 'alexthw.ars_scalaes' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ars_scalaes'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
minecraft {


    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.

    mappings channel: 'parchment', version: '2022.08.14-1.19.2'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                ars_scalaes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                ars_scalaes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'ars_scalaes', '--all', '--output', file('src/generated/resources/'), "--existing", file('src/main/resources/')

            mods {
                ars_scalaes {
                    source sourceSets.main
                }
            }
        }
    }
}
// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    flatDir {
        dirs 'externalmods'
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    mavenCentral()
    mavenLocal()
}
dependencies {

    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation fg.deobf("com.hollingsworth.ars_nouveau:ars_nouveau-${mc_version}:${ars_version}")

    //compileOnly fg.deobf("mezz.jei:jei-1.19-common-api:${jei_version}")
    //compileOnly fg.deobf("mezz.jei:jei-1.19-forge-api:${jei_version}")
    // at runtime, use the full JEI
    runtimeOnly fg.deobf("mezz.jei:jei-1.19-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.19-forge:${jei_version}")

    runtimeOnly fg.deobf("com.github.glitchfiend:TerraBlender-forge:1.19-2.0.0.120")


    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${mc_version}-${curio_version}")
    /*implementation*/ compileOnly fg.deobf("curse.maven:project_mmo-353935:4083371")
    /*implementation*/ compileOnly fg.deobf("curse.maven:scaling_health-248027:3943340")
    /*implementation*/ compileOnly fg.deobf("curse.maven:silent_chaos-242998:3968715")
    /*compileOnly*/ implementation fg.deobf("com.github.Virtuoel:Pehkui:3.6.0-${mc_version}-forge")
    implementation fg.deobf("vazkii.patchouli:Patchouli:${mc_version}-77")

    /*implementation*/compileOnly  fg.deobf("joefoxe:hexerei:0.2.5")


    /*compileOnly*/ implementation fg.deobf("curse.maven:elemental-561470:4398235")
    runtimeOnly fg.deobf("curse.maven:arch-419699:3984018")
    runtimeOnly fg.deobf("curse.maven:tpw-435044:3834422")

    /*compileOnly */ implementation fg.deobf("curse.maven:identity-391390:3956107")

    implementation fg.deobf("team.lodestar.lodestone:lodestone:${mc_version}-2.0.0.82")
    compileOnly fg.deobf("com.sammy.malum:malum:${mc_version}-1.4.3.1-9")

    runtimeOnly fg.deobf("at.petra-k.paucal:paucal-forge-${mc_version}:0.5.0")
    compileOnly fg.deobf("at.petra-k.hexcasting:hexcasting-common-${mc_version}:0.11.0-pre-557")
    implementation fg.deobf("at.petra-k.hexcasting:hexcasting-forge-${mc_version}:0.11.0-pre-557") { transitive = false }
    runtimeOnly 'thedarkcolour:kotlinforforge:3.9.1'

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Ars Scalaes",
                "Specification-Vendor": "alexthw",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"alexthw",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}


// Prevent Mixin annotation processor from getting into IDEA's annotation processor settings
// Copied from Botania
if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).configureEach {
            it.options.annotationProcessorPath = files()
        }
    }
}